{"t":{"$date":"2024-11-02T23:14:14.874Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":"xterm"},"version":"2.3.1","distributionKind":"compiled","buildArch":"x64","buildPlatform":"linux","buildTarget":"linux-x64","buildTime":"2024-09-05T17:53:54.697Z","gitVersion":"57a904a1acb7821eee4e4cde98ff779b87c612b1","nodeVersion":"v20.17.0","opensslVersion":"3.0.13+quic","sharedOpenssl":false,"runtimeArch":"x64","runtimePlatform":"linux","runtimeGlibcVersion":"2.39","deps":{"nodeDriverVersion":"6.8.0","libmongocryptVersion":"1.11.0","libmongocryptNodeBindingsVersion":"6.1.0","kerberosVersion":"2.1.0"}}}
{"t":{"$date":"2024-11-02T23:14:14.885Z"},"s":"I","c":"MONGOSH","id":1000000005,"ctx":"config","msg":"User updated"}
{"t":{"$date":"2024-11-02T23:14:14.886Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2024-11-02T23:14:14.975Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000049,"ctx":"mongosh-connect","msg":"Loaded system CA list","attr":{"caCount":293,"asyncFallbackError":null,"systemCertsError":null,"messages":[]}}
{"t":{"$date":"2024-11-02T23:14:15.007Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.1","driver":{"name":"nodejs|mongosh","version":"6.8.0|2.3.1"},"devtoolsConnectVersion":"3.2.10","host":"127.0.0.1:27017"}}
{"t":{"$date":"2024-11-02T23:14:15.012Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2024-11-02T23:14:15.038Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2024-11-02T23:14:15.039Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2024-11-02T23:14:15.040Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2024-11-02T23:14:15.043Z"},"s":"I","c":"MONGOSH","id":1000000003,"ctx":"repl","msg":"Start loading CLI scripts"}
{"t":{"$date":"2024-11-02T23:14:15.044Z"},"s":"I","c":"MONGOSH","id":1000000012,"ctx":"shell-api","msg":"Loading file via load()","attr":{"nested":false,"filename":"/docker-entrypoint-initdb.d/seed.js"}}
{"t":{"$date":"2024-11-02T23:14:15.073Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"const fs = require('fs');\r\n\r\nconst db = db.getSiblingDB('movies'); \r\nconst collectionName = 'movies'\r\n\r\nconst dataFilePath = '/docker-entrypoint-initdb.d/seeding.json'; \r\nconst jsonData = JSON.parse(fs.readFileSync(dataFilePath, 'utf8'));\r\n\r\ndb[collectionName].insertMany(jsonData);"}}
{"t":{"$date":"2024-11-02T23:14:15.075Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"movies"}}}
{"t":{"$date":"2024-11-02T23:14:15.076Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"insertMany","class":"Collection","db":"movies","coll":"movies","arguments":{"options":{}}}}
